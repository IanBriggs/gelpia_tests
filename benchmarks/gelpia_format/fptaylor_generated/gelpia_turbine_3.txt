# minimum: 10.25743827708045287577773572
#    type: provisional
#   input: r=3.826849108469703 v=-0.49921393632291533 w=0.4054709038080823

# maximum: 110.5
#    type: provisional
#   input: unknown

-f "(abs((((((((((((((((((((((((((abs(r)) * pow(v, 2)) * (abs((((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (((interval(24.0, 24.0) * pow(r, 2)) - interval(16.0, 16.0)) * v)) - (interval(24.0, 24.0) * pow(r, 2))) + interval(16.0, 16.0))))) - (((interval(2.0, 2.0) * (abs(r))) * v) * (abs((((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (((interval(24.0, 24.0) * pow(r, 2)) - interval(16.0, 16.0)) * v)) - (interval(24.0, 24.0) * pow(r, 2))) + interval(16.0, 16.0)))))) + ((abs(r)) * (abs((((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (((interval(24.0, 24.0) * pow(r, 2)) - interval(16.0, 16.0)) * v)) - (interval(24.0, 24.0) * pow(r, 2))) + interval(16.0, 16.0)))))) + (((abs(r)) * pow(v, 2)) * (abs((((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (((interval(20.0, 20.0) * pow(r, 2)) - interval(16.0, 16.0)) * v)) - (interval(20.0, 20.0) * pow(r, 2))) + interval(16.0, 16.0)))))) - (((interval(2.0, 2.0) * (abs(r))) * v) * (abs((((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (((interval(20.0, 20.0) * pow(r, 2)) - interval(16.0, 16.0)) * v)) - (interval(20.0, 20.0) * pow(r, 2))) + interval(16.0, 16.0)))))) + ((abs(r)) * (abs((((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (((interval(20.0, 20.0) * pow(r, 2)) - interval(16.0, 16.0)) * v)) - (interval(20.0, 20.0) * pow(r, 2))) + interval(16.0, 16.0)))))) + ((interval(8.0, 8.0) * pow(v, 2)) * (abs(((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (interval(16.0, 16.0) * v)) - interval(16.0, 16.0)))))) - ((interval(16.0, 16.0) * v) * (abs(((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (interval(16.0, 16.0) * v)) - interval(16.0, 16.0)))))) + (interval(8.0, 8.0) * (abs(((((((interval(2.0, 2.0) * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + (interval(16.0, 16.0) * v)) - interval(16.0, 16.0)))))) + ((((pow(r, 4) * (abs(r))) * pow(v, 2)) * (abs(((interval(2.0, 2.0) * v) + interval(1.0, 1.0))))) * (abs(w)))) - (((((interval(2.0, 2.0) * pow(r, 4)) * (abs(r))) * v) * (abs(((interval(2.0, 2.0) * v) + interval(1.0, 1.0))))) * (abs(w)))) + (((pow(r, 4) * (abs(r))) * (abs(((interval(2.0, 2.0) * v) + interval(1.0, 1.0))))) * (abs(w)))) + (((((interval(7.0, 7.0) * pow(r, 4)) * (abs(r))) * pow(v, 2)) * (abs(((interval(2.0, 2.0) * v) + interval(1.0, 1.0))))) * pow(w, 2))) - (((((interval(14.0, 14.0) * pow(r, 4)) * (abs(r))) * v) * (abs(((interval(2.0, 2.0) * v) + interval(1.0, 1.0))))) * pow(w, 2))) + ((((interval(7.0, 7.0) * pow(r, 4)) * (abs(r))) * (abs(((interval(2.0, 2.0) * v) + interval(1.0, 1.0))))) * pow(w, 2))) + ((((interval(12.0, 12.0) * pow(r, 4)) * (abs(r))) * (abs((v - interval(1.0, 1.0))))) * pow(w, 2))) + ((((interval(8.0, 8.0) * (abs(r))) * (abs(((interval(3.0, 3.0) * pow(r, 2)) - interval(2.0, 2.0))))) * pow(v, 2)) * (abs((v - interval(1.0, 1.0)))))) + (((interval(32.0, 32.0) * (abs(r))) * pow(v, 2)) * (abs((v - interval(1.0, 1.0)))))) - ((((interval(16.0, 16.0) * (abs(r))) * (abs(((interval(3.0, 3.0) * pow(r, 2)) - interval(2.0, 2.0))))) * v) * (abs((v - interval(1.0, 1.0)))))) - (((interval(64.0, 64.0) * (abs(r))) * v) * (abs((v - interval(1.0, 1.0)))))) + (((interval(8.0, 8.0) * (abs(r))) * (abs(((interval(3.0, 3.0) * pow(r, 2)) - interval(2.0, 2.0))))) * (abs((v - interval(1.0, 1.0)))))) + ((interval(32.0, 32.0) * (abs(r))) * (abs((v - interval(1.0, 1.0)))))) / ((((interval(8.0, 8.0) * pow(r, 2)) * (abs(r))) * pow((v - interval(1.0, 1.0)), 2)) * (abs((v - interval(1.0, 1.0))))))))"
-i "{'r' : (3.79999999999999982236e+00, 7.80000000000000071054e+00), 'v' : (-4.5, -2.99999999999999988898e-01), 'w' : (3.99999999999999966693e-01, 9.00000000000000022204e-01)}"
