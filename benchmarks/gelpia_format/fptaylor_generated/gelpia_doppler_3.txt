# minimum: 28.9269792883868615
#    type: provisional
#   input: T=30.0 u=120.0 v=300.0

# maximum: 734.0939075439163076
#    type: provisional
#   input: T=-50.0 u=-30.0 v=20300.0

-f "(abs(((interval(5.0, 5.0) * ((((((((interval(10.0, 10.0) * (abs(v))) * (abs(((interval(3.0, 3.0) * T) + interval(1657.0, 1657.0))))) * (abs((((interval(3.0, 3.0) * T) + (interval(5.0, 5.0) * u)) + interval(1657.0, 1657.0))))) + ((interval(3.27680000000000000000e+04, 3.27680000000000000000e+04) * (abs(((interval(3.0, 3.0) * T) + interval(1657.0, 1657.0))))) * (abs((((interval(3.0, 3.0) * T) + (interval(5.0, 5.0) * u)) + interval(1657.0, 1657.0)))))) + (((interval(2.00000000000000000000e+00, 2.00000000000000000000e+00) * (abs(v))) * (abs(((interval(3.0, 3.0) * T) + interval(1657.0, 1657.0))))) * (abs((((interval(3.0, 3.0) * T) - (interval(5.0, 5.0) * u)) + interval(1657.0, 1657.0)))))) + (((interval(1.10000000000000000000e+01, 1.10000000000000000000e+01) * (abs(v))) * (abs(T))) * (abs((((interval(3.0, 3.0) * T) - (interval(5.0, 5.0) * u)) + interval(1657.0, 1657.0)))))) + ((interval(2.75200000000000000000e+03, 2.75200000000000000000e+03) * (abs(v))) * (abs((((interval(3.0, 3.0) * T) - (interval(5.0, 5.0) * u)) + interval(1657.0, 1657.0)))))) + ((interval(1.28000000000000000000e+03, 1.28000000000000000000e+03) * (abs(v))) * (abs(((interval(3.0, 3.0) * T) + interval(1657.0, 1657.0))))))) / ((interval(2.00000000000000000000e+00, 2.00000000000000000000e+00) * pow((((interval(3.0, 3.0) * T) + (interval(5.0, 5.0) * u)) + interval(1657.0, 1657.0)), 2)) * (abs((((interval(3.0, 3.0) * T) + (interval(5.0, 5.0) * u)) + interval(1657.0, 1657.0))))))))"
-i "{'T' : (-50.0, 30.0), 'u' : (-30.0, 120.0), 'v' : (320.0, 20300.0)}"
