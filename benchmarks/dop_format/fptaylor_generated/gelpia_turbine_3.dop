# maximum: 110.729220272394
#    type: provisional
#   input: r=7.79997952565725, v=-4.49990886698676, w=0.899998443466782

# minimum: 10.1934561171948
#    type: provisional
#   input: r=3.80001136579089, v=-0.500028929703763, w=0.400000822821393

var:
r = [3.79999999999999982236e+00, 7.80000000000000071054e+00];
v = [-4.5, -2.99999999999999988898e-01];
w = [3.99999999999999966693e-01, 9.00000000000000022204e-01];

cost:
(abs((((((((((((((((((((((((((abs(r)) * pow(v, 2)) * (abs(((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ((([24.0, 24.0] * pow(r, 2)) - [16.0, 16.0]) * v)) - ([24.0, 24.0] * pow(r, 2))) + [16.0, 16.0])))) - ((([2.0, 2.0] * (abs(r))) * v) * (abs(((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ((([24.0, 24.0] * pow(r, 2)) - [16.0, 16.0]) * v)) - ([24.0, 24.0] * pow(r, 2))) + [16.0, 16.0]))))) + ((abs(r)) * (abs(((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ((([24.0, 24.0] * pow(r, 2)) - [16.0, 16.0]) * v)) - ([24.0, 24.0] * pow(r, 2))) + [16.0, 16.0]))))) + (((abs(r)) * pow(v, 2)) * (abs(((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ((([20.0, 20.0] * pow(r, 2)) - [16.0, 16.0]) * v)) - ([20.0, 20.0] * pow(r, 2))) + [16.0, 16.0]))))) - ((([2.0, 2.0] * (abs(r))) * v) * (abs(((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ((([20.0, 20.0] * pow(r, 2)) - [16.0, 16.0]) * v)) - ([20.0, 20.0] * pow(r, 2))) + [16.0, 16.0]))))) + ((abs(r)) * (abs(((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ((([20.0, 20.0] * pow(r, 2)) - [16.0, 16.0]) * v)) - ([20.0, 20.0] * pow(r, 2))) + [16.0, 16.0]))))) + (([8.0, 8.0] * pow(v, 2)) * (abs((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ([16.0, 16.0] * v)) - [16.0, 16.0]))))) - (([16.0, 16.0] * v) * (abs((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ([16.0, 16.0] * v)) - [16.0, 16.0]))))) + ([8.0, 8.0] * (abs((((((([2.0, 2.0] * pow(r, 4)) * v) + pow(r, 4)) * pow(w, 2)) + ([16.0, 16.0] * v)) - [16.0, 16.0]))))) + ((((pow(r, 4) * (abs(r))) * pow(v, 2)) * (abs((([2.0, 2.0] * v) + [1.0, 1.0])))) * (abs(w)))) - ((((([2.0, 2.0] * pow(r, 4)) * (abs(r))) * v) * (abs((([2.0, 2.0] * v) + [1.0, 1.0])))) * (abs(w)))) + (((pow(r, 4) * (abs(r))) * (abs((([2.0, 2.0] * v) + [1.0, 1.0])))) * (abs(w)))) + ((((([7.0, 7.0] * pow(r, 4)) * (abs(r))) * pow(v, 2)) * (abs((([2.0, 2.0] * v) + [1.0, 1.0])))) * pow(w, 2))) - ((((([14.0, 14.0] * pow(r, 4)) * (abs(r))) * v) * (abs((([2.0, 2.0] * v) + [1.0, 1.0])))) * pow(w, 2))) + (((([7.0, 7.0] * pow(r, 4)) * (abs(r))) * (abs((([2.0, 2.0] * v) + [1.0, 1.0])))) * pow(w, 2))) + (((([12.0, 12.0] * pow(r, 4)) * (abs(r))) * (abs((v - [1.0, 1.0])))) * pow(w, 2))) + (((([8.0, 8.0] * (abs(r))) * (abs((([3.0, 3.0] * pow(r, 2)) - [2.0, 2.0])))) * pow(v, 2)) * (abs((v - [1.0, 1.0]))))) + ((([32.0, 32.0] * (abs(r))) * pow(v, 2)) * (abs((v - [1.0, 1.0]))))) - (((([16.0, 16.0] * (abs(r))) * (abs((([3.0, 3.0] * pow(r, 2)) - [2.0, 2.0])))) * v) * (abs((v - [1.0, 1.0]))))) - ((([64.0, 64.0] * (abs(r))) * v) * (abs((v - [1.0, 1.0]))))) + ((([8.0, 8.0] * (abs(r))) * (abs((([3.0, 3.0] * pow(r, 2)) - [2.0, 2.0])))) * (abs((v - [1.0, 1.0]))))) + (([32.0, 32.0] * (abs(r))) * (abs((v - [1.0, 1.0]))))) / (((([8.0, 8.0] * pow(r, 2)) * (abs(r))) * pow((v - [1.0, 1.0]), 2)) * (abs((v - [1.0, 1.0])))))))

