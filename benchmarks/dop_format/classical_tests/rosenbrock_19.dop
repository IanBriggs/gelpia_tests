# minimum: 0.0
#    type: provisional
#   input: x1=1.0
#          x2=1.0
#          x3=1.0
#          x4=1.0
#          x5=1.0
#          x6=1.0
#          x7=1.0
#          x8=1.0
#          x9=1.0
#          x10=1.0
#          x11=1.0
#          x12=1.0
#          x13=1.0
#          x14=1.0
#          x15=1.0
#          x16=1.0
#          x17=1.0
#          x18=1.0
#          x19=1.0

# maximum: 8057598.13641958
#    type: provisional
#   input: x1=9.22753224854934
#          x2=9.15447076091588
#          x3=-3.09078393171041
#          x4=9.63974728236497
#          x5=-1.5558479720007
#          x6=7.6658076941179
#          x7=9.0278964928143
#          x8=9.86429335060851
#          x9=-3.10917638991661
#          x10=-4.96779750433679
#          x11=9.99683863127044
#          x12=4.74529249460514
#          x13=3.08535868423426
#          x14=9.70821234053753
#          x15=9.98619459440197
#          x16=9.83513135780614
#          x17=7.07575739327077
#          x18=8.75781979985385
#          x19=0.508156820129291

var:
[-5, 10] x1;
[-5, 10] x2;
[-5, 10] x3;
[-5, 10] x4;
[-5, 10] x5;
[-5, 10] x6;
[-5, 10] x7;
[-5, 10] x8;
[-5, 10] x9;
[-5, 10] x10;
[-5, 10] x11;
[-5, 10] x12;
[-5, 10] x13;
[-5, 10] x14;
[-5, 10] x15;
[-5, 10] x16;
[-5, 10] x17;
[-5, 10] x18;
[-5, 10] x19;

cost:
100 * (x2 - x1^2)^2 + (x1 - 1)^2;
100 * (x3 - x2^2)^2 + (x2 - 1)^2;
100 * (x4 - x3^2)^2 + (x3 - 1)^2;
100 * (x5 - x4^2)^2 + (x4 - 1)^2;
100 * (x6 - x5^2)^2 + (x5 - 1)^2;
100 * (x7 - x6^2)^2 + (x6 - 1)^2;
100 * (x8 - x7^2)^2 + (x7 - 1)^2;
100 * (x9 - x8^2)^2 + (x8 - 1)^2;
100 * (x10 - x9^2)^2 + (x9 - 1)^2;
100 * (x11 - x10^2)^2 + (x10 - 1)^2;
100 * (x12 - x11^2)^2 + (x11 - 1)^2;
100 * (x13 - x12^2)^2 + (x12 - 1)^2;
100 * (x14 - x13^2)^2 + (x13 - 1)^2;
100 * (x15 - x14^2)^2 + (x14 - 1)^2;
100 * (x16 - x15^2)^2 + (x15 - 1)^2;
100 * (x17 - x16^2)^2 + (x16 - 1)^2;
100 * (x18 - x17^2)^2 + (x17 - 1)^2;
100 * (x19 - x18^2)^2 + (x18 - 1)^2;
