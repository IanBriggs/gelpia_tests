# minimum: 0.0
#    type: provisional
#   input: x1=1.0
#          x2=1.0
#          x3=1.0
#          x4=1.0
#          x5=1.0
#          x6=1.0
#          x7=1.0
#          x8=1.0
#          x9=1.0
#          x10=1.0
#          x11=1.0
#          x12=1.0
#          x13=1.0
#          x14=1.0
#          x15=1.0
#          x16=1.0
#          x17=1.0
#          x18=1.0

# maximum: 8204779.32697005
#    type: provisional
#   input: x1=8.79289502461302
#          x2=9.96735989567873
#          x3=9.98764174617137
#          x4=1.02406056881462
#          x5=9.56607852643067
#          x6=-4.83172955711777
#          x7=9.77794504164695
#          x8=0.719977617937414
#          x9=9.86349103242309
#          x10=9.58120497908437
#          x11=8.31916272549662
#          x12=7.97327785663435
#          x13=7.04076474007722
#          x14=9.90560602423544
#          x15=-3.93258596790421
#          x16=9.13286026515284
#          x17=-3.11051055210136
#          x18=5.2298341321051

var:
[-5, 10] x1;
[-5, 10] x2;
[-5, 10] x3;
[-5, 10] x4;
[-5, 10] x5;
[-5, 10] x6;
[-5, 10] x7;
[-5, 10] x8;
[-5, 10] x9;
[-5, 10] x10;
[-5, 10] x11;
[-5, 10] x12;
[-5, 10] x13;
[-5, 10] x14;
[-5, 10] x15;
[-5, 10] x16;
[-5, 10] x17;
[-5, 10] x18;

cost:
100 * (x2 - x1^2)^2 + (x1 - 1)^2;
100 * (x3 - x2^2)^2 + (x2 - 1)^2;
100 * (x4 - x3^2)^2 + (x3 - 1)^2;
100 * (x5 - x4^2)^2 + (x4 - 1)^2;
100 * (x6 - x5^2)^2 + (x5 - 1)^2;
100 * (x7 - x6^2)^2 + (x6 - 1)^2;
100 * (x8 - x7^2)^2 + (x7 - 1)^2;
100 * (x9 - x8^2)^2 + (x8 - 1)^2;
100 * (x10 - x9^2)^2 + (x9 - 1)^2;
100 * (x11 - x10^2)^2 + (x10 - 1)^2;
100 * (x12 - x11^2)^2 + (x11 - 1)^2;
100 * (x13 - x12^2)^2 + (x12 - 1)^2;
100 * (x14 - x13^2)^2 + (x13 - 1)^2;
100 * (x15 - x14^2)^2 + (x14 - 1)^2;
100 * (x16 - x15^2)^2 + (x15 - 1)^2;
100 * (x17 - x16^2)^2 + (x16 - 1)^2;
100 * (x18 - x17^2)^2 + (x17 - 1)^2;
